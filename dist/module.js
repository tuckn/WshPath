var __filename=__filename||String(WScript.ScriptFullName),__dirname=__dirname||__filename.replace(/\\[^\\]+$/,"");!function(){var util,sh,fso,isString,isSolidString,isSameStr,includes,endsWith,startsWith,path,throwErrNonStr;Wsh&&Wsh.Path||(Wsh.Shell||(Wsh.Shell=WScript.CreateObject("WScript.Shell")),Wsh.FileSystemObject||(Wsh.FileSystemObject=WScript.CreateObject("Scripting.FileSystemObject")),Wsh.Path={},util=Wsh.Util,sh=Wsh.Shell,fso=Wsh.FileSystemObject,isString=util.isString,isSolidString=util.isSolidString,isSameStr=util.isSameMeaning,includes=util.includes,endsWith=util.endsWith,startsWith=util.startsWith,path=Wsh.Path,throwErrNonStr=function(functionName,typeErrVal){util.throwTypeError("string","WshPath/Path.js",functionName,typeErrVal)},path.delimiter=";",path.sep="\\",path.isUNC=function(str){return isString(str)||throwErrNonStr("path.isUNC",str),/^\\{2}(\?UNC\\)?[^/\\]+[/\\][^/\\]+/i.test(str)},path.dirname=function(str){if(isString(str)||throwErrNonStr("path.dirname",str),/^[/\\]{2}[^/\\]+[/\\]?$/i.test(str))return path.sep;if(/^[/\\]{2}[^/\\]+[/\\][^/\\]+[/\\]?$/i.test(str))return str;if(/^[a-z]:[/\\]?$/i.test(str))return str;str=fso.GetParentFolderName(str);return""===str?".":/^[/\\]{2}[^/\\]+[/\\][^/\\]+$/i.test(str)?str+path.sep:str},path.basename=function(str,ext){isString(str)||throwErrNonStr("path.basename",str),/^[/\\]{2}/i.test(str)&&(str=str.replace(/^[/\\]{2}/,""));str=fso.GetFileName(str);return!isSolidString(ext)||""===(ext=fso.GetFileName(str).replace(new RegExp(ext+"$"),""))?str:ext},path.extname=function(str){if(isString(str)||throwErrNonStr("path.extname",str),endsWith(str,"."))return".";var baseName=fso.GetFileName(str),str="."+fso.GetExtensionName(str);return str===baseName||"."==str?"":str},path.parse=function(str){isString(str)||throwErrNonStr("path.parse",str);var root="",baseName=(path.isUNC(str)?root=str.match(/^([/\\]{2}[^/\\]+[/\\]?([^/\\]+)?[/\\]?)/i)[1]:/^[a-z]:[/\\]?/i.test(str)&&(root=str.match(/^([a-z]:[/\\]?)/i)[1]),path.basename(str)),extName=path.extname(str);return{root:root,dir:path.dirname(str),base:baseName,ext:extName,name:path.basename(baseName,extName)}},path.isAbsolute=function(str){return isString(str)||throwErrNonStr("path.isAbsolute",str),/^([a-z]:|[/\\]{2}[^/\\]+)/i.test(str)},path.normalize=function(str){if(isString(str)||throwErrNonStr("path.isAbsolute",str),""===str)return".";if("."===str||".."===str)return str;str=str.replace(/\//g,path.sep);if(!includes(str,path.sep))return str;var head=(str=/^[a-z]:[\\]+/i.test(str)?str.match(/^([a-z]:)[\\]+(.*)/i):path.isUNC(str)?str.match(/^(\\\\[^\\]+)[\\]+(.*)/i):/^[^\\]+\\/i.test(str)?str.match(/^([^\\]+)[\\]+(.*)/i):[null,"",str])[1],str=str[2].split(path.sep).reduce(function(acc,branch){return isSolidString(branch)&&"."!==branch?".."===branch?acc.replace(/[^\\]+\\?$/,""):fso.BuildPath(acc,branch):acc},"");return str=""!==head?head+path.sep+str:str},path.join=function(){var parts=Array.from(arguments),pth=parts.shift();return endsWith(pth,":")&&(pth+=path.sep),parts.forEach(function(part){isString(part)||throwErrNonStr("path.join",part),pth=fso.BuildPath(pth,part)}),path.normalize(pth)},path.resolve=function(){var parts=Array.from(arguments),pth=parts.shift();return endsWith(pth,":")&&(pth+=path.sep),path.isAbsolute(pth)||(pth=path.join(sh.CurrentDirectory,pth)),parts.forEach(function(part){isString(part)||throwErrNonStr("path.resolve",part),pth=/^[a-z]:/i.test(part)?part:fso.BuildPath(pth,part)}),path.normalize(pth)},path.toUNC=function(str){if(isString(str)||throwErrNonStr("path.toUNC",str),""===str)return"";if(/^[/\\]{2}[^/\\]+/i.test(str))return str;var network=WScript.CreateObject("WScript.Network"),network=String(network.ComputerName);return path.resolve(str).replace(/^([a-z]):/i,"\\\\"+network+"\\$1$")},path.relative=function(fromDir,toPath){if(isString(fromDir)||throwErrNonStr("path.relative",fromDir),isString(toPath)||throwErrNonStr("path.relative",toPath),""===fromDir&&""===toPath)return"";if(fromDir=path.resolve(fromDir),toPath=path.resolve(toPath),!isSameStr(path.parse(fromDir).root,path.parse(toPath).root))return toPath;for(var fromNodes=fromDir.split(path.sep),toNodes=toPath.split(path.sep),rtnRelPath=toPath,matchedNum=0,i=0,I=fromNodes.length;i<I&&isSameStr(fromNodes[i],toNodes[i]);i++)rtnRelPath=rtnRelPath.replace(toNodes[i]+path.sep,""),matchedNum++;fromDir=fromNodes.length-matchedNum;if(0==fromDir)rtnRelPath="."+path.sep+rtnRelPath;else for(var upNum=fromDir;0<upNum--;)rtnRelPath=".."+path.sep+rtnRelPath;return startsWith(rtnRelPath,"."+path.sep)?rtnRelPath.slice(("."+path.sep).length):rtnRelPath})}();
